// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.0
// source: proto/discordgo_message.proto

package discordgopb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageAllowedMentions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parse       []string `protobuf:"bytes,1,rep,name=parse,proto3" json:"parse,omitempty"`
	Roles       []string `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	Users       []string `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	RepliedUser bool     `protobuf:"varint,4,opt,name=replied_user,json=repliedUser,proto3" json:"replied_user,omitempty"`
}

func (x *MessageAllowedMentions) Reset() {
	*x = MessageAllowedMentions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAllowedMentions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAllowedMentions) ProtoMessage() {}

func (x *MessageAllowedMentions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAllowedMentions.ProtoReflect.Descriptor instead.
func (*MessageAllowedMentions) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{0}
}

func (x *MessageAllowedMentions) GetParse() []string {
	if x != nil {
		return x.Parse
	}
	return nil
}

func (x *MessageAllowedMentions) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *MessageAllowedMentions) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *MessageAllowedMentions) GetRepliedUser() bool {
	if x != nil {
		return x.RepliedUser
	}
	return false
}

type MessageAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url         string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ProxyUrl    string `protobuf:"bytes,3,opt,name=proxy_url,json=proxyUrl,proto3" json:"proxy_url,omitempty"`
	Filename    string `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType string `protobuf:"bytes,5,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Height      int32  `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	Width       int32  `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
	Size        int32  `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	Ephemeral   bool   `protobuf:"varint,9,opt,name=ephemeral,proto3" json:"ephemeral,omitempty"`
}

func (x *MessageAttachment) Reset() {
	*x = MessageAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAttachment) ProtoMessage() {}

func (x *MessageAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAttachment.ProtoReflect.Descriptor instead.
func (*MessageAttachment) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{1}
}

func (x *MessageAttachment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageAttachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageAttachment) GetProxyUrl() string {
	if x != nil {
		return x.ProxyUrl
	}
	return ""
}

func (x *MessageAttachment) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MessageAttachment) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *MessageAttachment) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MessageAttachment) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MessageAttachment) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MessageAttachment) GetEphemeral() bool {
	if x != nil {
		return x.Ephemeral
	}
	return false
}

type MessageEmbed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Type        string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Title       string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Timestamp   string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Color       int32                  `protobuf:"varint,6,opt,name=color,proto3" json:"color,omitempty"`
	Footer      *MessageEmbedFooter    `protobuf:"bytes,7,opt,name=footer,proto3" json:"footer,omitempty"`
	Image       *MessageEmbedImage     `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	Thumbnail   *MessageEmbedThumbnail `protobuf:"bytes,9,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Video       *MessageEmbedVideo     `protobuf:"bytes,10,opt,name=video,proto3" json:"video,omitempty"`
	Provider    *MessageEmbedProvider  `protobuf:"bytes,11,opt,name=provider,proto3" json:"provider,omitempty"`
	Author      *MessageEmbedAuthor    `protobuf:"bytes,12,opt,name=author,proto3" json:"author,omitempty"`
	Fields      []*MessageEmbedField   `protobuf:"bytes,13,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *MessageEmbed) Reset() {
	*x = MessageEmbed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbed) ProtoMessage() {}

func (x *MessageEmbed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbed.ProtoReflect.Descriptor instead.
func (*MessageEmbed) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{2}
}

func (x *MessageEmbed) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageEmbed) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MessageEmbed) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MessageEmbed) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MessageEmbed) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *MessageEmbed) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *MessageEmbed) GetFooter() *MessageEmbedFooter {
	if x != nil {
		return x.Footer
	}
	return nil
}

func (x *MessageEmbed) GetImage() *MessageEmbedImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *MessageEmbed) GetThumbnail() *MessageEmbedThumbnail {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *MessageEmbed) GetVideo() *MessageEmbedVideo {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *MessageEmbed) GetProvider() *MessageEmbedProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *MessageEmbed) GetAuthor() *MessageEmbedAuthor {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *MessageEmbed) GetFields() []*MessageEmbedField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type MessageEmbedFooter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text         string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	IconUrl      string `protobuf:"bytes,2,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	ProxyIconUrl string `protobuf:"bytes,3,opt,name=proxy_icon_url,json=proxyIconUrl,proto3" json:"proxy_icon_url,omitempty"`
}

func (x *MessageEmbedFooter) Reset() {
	*x = MessageEmbedFooter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedFooter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedFooter) ProtoMessage() {}

func (x *MessageEmbedFooter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedFooter.ProtoReflect.Descriptor instead.
func (*MessageEmbedFooter) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{3}
}

func (x *MessageEmbedFooter) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MessageEmbedFooter) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *MessageEmbedFooter) GetProxyIconUrl() string {
	if x != nil {
		return x.ProxyIconUrl
	}
	return ""
}

type MessageEmbedImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ProxyUrl string `protobuf:"bytes,2,opt,name=proxy_url,json=proxyUrl,proto3" json:"proxy_url,omitempty"`
	Width    int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height   int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MessageEmbedImage) Reset() {
	*x = MessageEmbedImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedImage) ProtoMessage() {}

func (x *MessageEmbedImage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedImage.ProtoReflect.Descriptor instead.
func (*MessageEmbedImage) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{4}
}

func (x *MessageEmbedImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageEmbedImage) GetProxyUrl() string {
	if x != nil {
		return x.ProxyUrl
	}
	return ""
}

func (x *MessageEmbedImage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MessageEmbedImage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MessageEmbedThumbnail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ProxyUrl string `protobuf:"bytes,2,opt,name=proxy_url,json=proxyUrl,proto3" json:"proxy_url,omitempty"`
	Width    int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height   int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MessageEmbedThumbnail) Reset() {
	*x = MessageEmbedThumbnail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedThumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedThumbnail) ProtoMessage() {}

func (x *MessageEmbedThumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedThumbnail.ProtoReflect.Descriptor instead.
func (*MessageEmbedThumbnail) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{5}
}

func (x *MessageEmbedThumbnail) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageEmbedThumbnail) GetProxyUrl() string {
	if x != nil {
		return x.ProxyUrl
	}
	return ""
}

func (x *MessageEmbedThumbnail) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MessageEmbedThumbnail) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MessageEmbedVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Width  int32  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height int32  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MessageEmbedVideo) Reset() {
	*x = MessageEmbedVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedVideo) ProtoMessage() {}

func (x *MessageEmbedVideo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedVideo.ProtoReflect.Descriptor instead.
func (*MessageEmbedVideo) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{6}
}

func (x *MessageEmbedVideo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageEmbedVideo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MessageEmbedVideo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MessageEmbedProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MessageEmbedProvider) Reset() {
	*x = MessageEmbedProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedProvider) ProtoMessage() {}

func (x *MessageEmbedProvider) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedProvider.ProtoReflect.Descriptor instead.
func (*MessageEmbedProvider) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{7}
}

func (x *MessageEmbedProvider) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageEmbedProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MessageEmbedAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url          string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IconUrl      string `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	ProxyIconUrl string `protobuf:"bytes,4,opt,name=proxy_icon_url,json=proxyIconUrl,proto3" json:"proxy_icon_url,omitempty"`
}

func (x *MessageEmbedAuthor) Reset() {
	*x = MessageEmbedAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedAuthor) ProtoMessage() {}

func (x *MessageEmbedAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedAuthor.ProtoReflect.Descriptor instead.
func (*MessageEmbedAuthor) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{8}
}

func (x *MessageEmbedAuthor) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageEmbedAuthor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageEmbedAuthor) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *MessageEmbedAuthor) GetProxyIconUrl() string {
	if x != nil {
		return x.ProxyIconUrl
	}
	return ""
}

type MessageEmbedField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Inline bool   `protobuf:"varint,3,opt,name=inline,proto3" json:"inline,omitempty"`
}

func (x *MessageEmbedField) Reset() {
	*x = MessageEmbedField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmbedField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmbedField) ProtoMessage() {}

func (x *MessageEmbedField) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmbedField.ProtoReflect.Descriptor instead.
func (*MessageEmbedField) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{9}
}

func (x *MessageEmbedField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageEmbedField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MessageEmbedField) GetInline() bool {
	if x != nil {
		return x.Inline
	}
	return false
}

type MessageReactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Me    bool   `protobuf:"varint,2,opt,name=me,proto3" json:"me,omitempty"`
	Emoji *Emoji `protobuf:"bytes,3,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (x *MessageReactions) Reset() {
	*x = MessageReactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactions) ProtoMessage() {}

func (x *MessageReactions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactions.ProtoReflect.Descriptor instead.
func (*MessageReactions) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{10}
}

func (x *MessageReactions) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MessageReactions) GetMe() bool {
	if x != nil {
		return x.Me
	}
	return false
}

func (x *MessageReactions) GetEmoji() *Emoji {
	if x != nil {
		return x.Emoji
	}
	return nil
}

type Emoji struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Roles         []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	User          *User    `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	RequireColons bool     `protobuf:"varint,5,opt,name=require_colons,json=requireColons,proto3" json:"require_colons,omitempty"`
	Managed       bool     `protobuf:"varint,6,opt,name=managed,proto3" json:"managed,omitempty"`
	Animated      bool     `protobuf:"varint,7,opt,name=animated,proto3" json:"animated,omitempty"`
	Available     bool     `protobuf:"varint,8,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *Emoji) Reset() {
	*x = Emoji{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emoji) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emoji) ProtoMessage() {}

func (x *Emoji) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emoji.ProtoReflect.Descriptor instead.
func (*Emoji) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{11}
}

func (x *Emoji) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Emoji) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Emoji) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Emoji) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Emoji) GetRequireColons() bool {
	if x != nil {
		return x.RequireColons
	}
	return false
}

func (x *Emoji) GetManaged() bool {
	if x != nil {
		return x.Managed
	}
	return false
}

func (x *Emoji) GetAnimated() bool {
	if x != nil {
		return x.Animated
	}
	return false
}

func (x *Emoji) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type MessageActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	PartyId string `protobuf:"bytes,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *MessageActivity) Reset() {
	*x = MessageActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageActivity) ProtoMessage() {}

func (x *MessageActivity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageActivity.ProtoReflect.Descriptor instead.
func (*MessageActivity) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{12}
}

func (x *MessageActivity) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageActivity) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

type MessageApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CoverImage  string `protobuf:"bytes,2,opt,name=cover_image,json=coverImage,proto3" json:"cover_image,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Icon        string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MessageApplication) Reset() {
	*x = MessageApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageApplication) ProtoMessage() {}

func (x *MessageApplication) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageApplication.ProtoReflect.Descriptor instead.
func (*MessageApplication) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{13}
}

func (x *MessageApplication) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageApplication) GetCoverImage() string {
	if x != nil {
		return x.CoverImage
	}
	return ""
}

func (x *MessageApplication) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MessageApplication) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MessageApplication) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MessageReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	GuildId   string `protobuf:"bytes,3,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
}

func (x *MessageReference) Reset() {
	*x = MessageReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReference) ProtoMessage() {}

func (x *MessageReference) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReference.ProtoReflect.Descriptor instead.
func (*MessageReference) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{14}
}

func (x *MessageReference) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageReference) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MessageReference) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

type MessageInteraction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type   uint32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Name   string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	User   *User   `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Member *Member `protobuf:"bytes,5,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *MessageInteraction) Reset() {
	*x = MessageInteraction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInteraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInteraction) ProtoMessage() {}

func (x *MessageInteraction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInteraction.ProtoReflect.Descriptor instead.
func (*MessageInteraction) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{15}
}

func (x *MessageInteraction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageInteraction) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageInteraction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageInteraction) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *MessageInteraction) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type Sticker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PackId      string `protobuf:"bytes,2,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Tags        string `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
	Type        int32  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	FormatType  int32  `protobuf:"varint,7,opt,name=format_type,json=formatType,proto3" json:"format_type,omitempty"`
	Available   bool   `protobuf:"varint,8,opt,name=available,proto3" json:"available,omitempty"`
	GuildId     string `protobuf:"bytes,9,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	User        *User  `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	SortValue   int32  `protobuf:"varint,11,opt,name=sort_value,json=sortValue,proto3" json:"sort_value,omitempty"`
}

func (x *Sticker) Reset() {
	*x = Sticker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sticker) ProtoMessage() {}

func (x *Sticker) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sticker.ProtoReflect.Descriptor instead.
func (*Sticker) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{16}
}

func (x *Sticker) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Sticker) GetPackId() string {
	if x != nil {
		return x.PackId
	}
	return ""
}

func (x *Sticker) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sticker) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Sticker) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *Sticker) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Sticker) GetFormatType() int32 {
	if x != nil {
		return x.FormatType
	}
	return 0
}

func (x *Sticker) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *Sticker) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *Sticker) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Sticker) GetSortValue() int32 {
	if x != nil {
		return x.SortValue
	}
	return 0
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Content     []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_discordgo_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_proto_discordgo_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_proto_discordgo_message_proto_rawDescGZIP(), []int{17}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *File) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_proto_discordgo_message_proto protoreflect.FileDescriptor

var file_proto_discordgo_message_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x67,
	0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0xf1, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x22, 0xa9, 0x04, 0x0a, 0x0c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x06,
	0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x6f, 0x6f,
	0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x52, 0x09, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x67, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x3b, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x67, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12,
	0x34, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x69, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x22, 0x70, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x74, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x53, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x3c, 0x0a,
	0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7b, 0x0a, 0x12, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x22, 0x55, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22,
	0x60, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x67, 0x6f, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x22, 0xe1, 0x01, 0x0a, 0x05, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x6e,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x40, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x10, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xae, 0x02, 0x0a, 0x07, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x57, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42,
	0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x45, 0x6c,
	0x69, 0x61, 0x73, 0x53, 0x74, 0x61, 0x72, 0x2f, 0x42, 0x61, 0x63, 0x6f, 0x54, 0x65, 0x6c, 0x6c,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x67, 0x6f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_discordgo_message_proto_rawDescOnce sync.Once
	file_proto_discordgo_message_proto_rawDescData = file_proto_discordgo_message_proto_rawDesc
)

func file_proto_discordgo_message_proto_rawDescGZIP() []byte {
	file_proto_discordgo_message_proto_rawDescOnce.Do(func() {
		file_proto_discordgo_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_discordgo_message_proto_rawDescData)
	})
	return file_proto_discordgo_message_proto_rawDescData
}

var file_proto_discordgo_message_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_discordgo_message_proto_goTypes = []interface{}{
	(*MessageAllowedMentions)(nil), // 0: discordgo.MessageAllowedMentions
	(*MessageAttachment)(nil),      // 1: discordgo.MessageAttachment
	(*MessageEmbed)(nil),           // 2: discordgo.MessageEmbed
	(*MessageEmbedFooter)(nil),     // 3: discordgo.MessageEmbedFooter
	(*MessageEmbedImage)(nil),      // 4: discordgo.MessageEmbedImage
	(*MessageEmbedThumbnail)(nil),  // 5: discordgo.MessageEmbedThumbnail
	(*MessageEmbedVideo)(nil),      // 6: discordgo.MessageEmbedVideo
	(*MessageEmbedProvider)(nil),   // 7: discordgo.MessageEmbedProvider
	(*MessageEmbedAuthor)(nil),     // 8: discordgo.MessageEmbedAuthor
	(*MessageEmbedField)(nil),      // 9: discordgo.MessageEmbedField
	(*MessageReactions)(nil),       // 10: discordgo.MessageReactions
	(*Emoji)(nil),                  // 11: discordgo.Emoji
	(*MessageActivity)(nil),        // 12: discordgo.MessageActivity
	(*MessageApplication)(nil),     // 13: discordgo.MessageApplication
	(*MessageReference)(nil),       // 14: discordgo.MessageReference
	(*MessageInteraction)(nil),     // 15: discordgo.MessageInteraction
	(*Sticker)(nil),                // 16: discordgo.Sticker
	(*File)(nil),                   // 17: discordgo.File
	(*User)(nil),                   // 18: discordgo.User
	(*Member)(nil),                 // 19: discordgo.Member
}
var file_proto_discordgo_message_proto_depIdxs = []int32{
	3,  // 0: discordgo.MessageEmbed.footer:type_name -> discordgo.MessageEmbedFooter
	4,  // 1: discordgo.MessageEmbed.image:type_name -> discordgo.MessageEmbedImage
	5,  // 2: discordgo.MessageEmbed.thumbnail:type_name -> discordgo.MessageEmbedThumbnail
	6,  // 3: discordgo.MessageEmbed.video:type_name -> discordgo.MessageEmbedVideo
	7,  // 4: discordgo.MessageEmbed.provider:type_name -> discordgo.MessageEmbedProvider
	8,  // 5: discordgo.MessageEmbed.author:type_name -> discordgo.MessageEmbedAuthor
	9,  // 6: discordgo.MessageEmbed.fields:type_name -> discordgo.MessageEmbedField
	11, // 7: discordgo.MessageReactions.emoji:type_name -> discordgo.Emoji
	18, // 8: discordgo.Emoji.user:type_name -> discordgo.User
	18, // 9: discordgo.MessageInteraction.user:type_name -> discordgo.User
	19, // 10: discordgo.MessageInteraction.member:type_name -> discordgo.Member
	18, // 11: discordgo.Sticker.user:type_name -> discordgo.User
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_discordgo_message_proto_init() }
func file_proto_discordgo_message_proto_init() {
	if File_proto_discordgo_message_proto != nil {
		return
	}
	file_proto_discordgo_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_discordgo_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageAllowedMentions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedFooter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedThumbnail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmbedField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emoji); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInteraction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sticker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_discordgo_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_discordgo_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_discordgo_message_proto_goTypes,
		DependencyIndexes: file_proto_discordgo_message_proto_depIdxs,
		MessageInfos:      file_proto_discordgo_message_proto_msgTypes,
	}.Build()
	File_proto_discordgo_message_proto = out.File
	file_proto_discordgo_message_proto_rawDesc = nil
	file_proto_discordgo_message_proto_goTypes = nil
	file_proto_discordgo_message_proto_depIdxs = nil
}
